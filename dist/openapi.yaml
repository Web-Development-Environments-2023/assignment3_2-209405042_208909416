---
openapi: 3.0.0
info:
  title: Simple Inventory API
  description: This is a simple API describes recipes site.
  contact:
    email: carmelit@post.bgu.ac.il
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: "http://127.0.0.1:3000"
  description: SwaggerHub API for recipes site
# tags:
# - name: admins
#   description: Secured Admin-only calls
# - name: developers
#   description: Operations available to regular developers
paths:
  /recipes/{id}:
    get:
      tags:
      - recipes
      summary: Get a recipe by ID
      operationId: getRecipeById
      parameters:
      - name: id
        in: path
        description: ID of the recipe to get
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: recipe found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'
        "404":
          description: Recipe not found
  /users/addRecipe/:
    post:
      tags:
      - user
      summary: add new recipe
      description: Adds new recipe to the system
      operationId: addRecipe
      requestBody:
        description: new recipe to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewRecipe'
      responses:
        "201":
          description: recipe created
        "400":
          description: "Parameters Error"
  /users/myRecipes/{id}:
    get:
      tags:
      - user
      summary: get recipe created by the user
      description: get full recipe created by the user
      operationId: myRecipes
      parameters:
      - name: id
        in: path
        description: ID of the recipe to get
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: recipe created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyRecipe'
        "401":
          description: "Unauthorized"
  /users/myRecipes/:
    get:
      tags:
      - user
      summary: get all recipes previews created by the user
      description: get previews of recipe created by the user
      operationId: myRecipesPreviews
      responses:
        "200":
          description: all previews retrived
          content:
            application/json:
              schema:
              type: array
              items:
                $ref: '#/components/schemas/MyRecipeDetails'
        "401":
          description: "Unauthorized"
        "404":
        description: "Wrong type of recipe."
  /users/myRecipes/family/{id}:
    get:
      tags:
      - user
      summary: get recipe created by the user (recipes from type family)
      description: get full recipe created by the user (recipes from type family)
      operationId: myFamilyRecipes
      parameters:
      - name: id
        in: path
        description: ID of the recipe to get (FAXXX)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: recipe created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyRecipe'
        "401":
          description: "Unauthorized"
  /users/myRecipes/family:
    get:
      tags:
      - user
      summary: get all recipes previews created by the user (recipes from type family)
      description: get previews of recipe created by the user (recipes from type family)
      operationId: myFamilyRecipesPreviews
      responses:
        "200":
          description: all previews retrived
          content:
            application/json:
              schema:
              type: array
              items:
                $ref: '#/components/schemas/MyRecipeDetails'
        "401":
          description: "Unauthorized"
        "404":
        description: "Wrong type of recipe."
  /recipes/preview/{id}:
    get:
      tags:
      - recipes
      summary: get recipe preview
      description: user get preview of recipe.
      operationId: recipe preview
      parameters:
      - name: id
        in: path
        description: ID of the recipe to get preview
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: successful preview of all recipes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecipeDetails'
        "404":
          description: recipes not found
  /login:
    post:
      tags:
      - authentication
      summary: user login
      description: login to website.
      operationId: login
      requestBody:
        description: User credentials for login
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/login_body'
      responses:
        "200":
          description: login succeeded
        "401":
          description: wrong password.
        "404":
          description: user doesn't exist
  /logout:
    post:
      tags:
      - authentication
      summary: user logout
      description: login from website.
      operationId: logout
      responses:
        "200":
          description: logout succeeded
  /randomRecipes:
    get:
      tags:
      - home
      summary: display recipes
      description: display 3 random recipes.
      operationId: randomRecieps
      responses:
        "200":
          description: rand 3 recipes succeeded.
          content:
            application/json:
              schema:
                maxItems: 3
                minItems: 3
                type: array
                description: array of 3 random recipes
                items:
                  $ref: '#/components/schemas/RecipeDetails'
        "204":
          description: No recipes found.
  /users/lastViews:
    get:
      tags:
      - user
      summary: get last 3 recipes watched by the user - (db lastviews).
      description: display preview of last 3 watched recipes.
      operationId: lastViewsUpdate
      responses:
        "200":
          description: Previews retrived successfully.
          content:
            application/json:
              schema:
                type: array
                description: array of 3 previews of reccipa
                items:
                - $ref: '#/components/schemas/RecipeDetails'
                - $ref: '#/components/schemas/MyRecipeDetails'
        "404":
          description: Server error.

  /search:
    get:
      tags:
      - home
      summary: search recipe
      description: "search recipe with keywords (name, ingrediets...)."
      operationId: searchRecipe
      parameters:
      - name: query
        in: query
        description: Search query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: cuisine
        in: query
        description: filter by cousine
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: diet
        in: query
        description: filter by diet
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: intolerance
        in: query
        description: filter by intolerance
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: number
        deafult: 5
        in: query
        description: number of wanted result
        required: false
        style: form
        explode: true
        schema:
          type: int
      - name: sort
        deafult: '(empty)'
        in: query
        description: sorting method
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: recipes found.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recipe'
        "204":
          description: No recipes found.
        "400":
          description: Parameters error.
        "404":
          description: Server error.
  /register:
    post:
      tags:
      - authentication
      summary: user register
      description: Register to website.
      operationId: register
      requestBody:
        description: new user to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        "303":
          description: "User created successfully, redirecting to login page"
          headers:
            location:
              description: redirect to login page
              style: simple
              explode: false
              schema:
                type: string
        "400":
          description: Invalid request body
  /users/favorites:
    post:
        tags:
        - user
        summary: user favorite recipes
        description: Save recipe in user favorite.
        operationId: addFavorite
        requestBody:
          description: recipeid
          content:
            application/json:
              schema:
                required:
                - recipeid
                properties:
                  recipeid:
                    type: int
        responses:
          "303":
            description: "User created successfully, redirecting to login page"
            headers:
              location:
                description: redirect to login page
                style: simple
                explode: false
                schema:
                  type: string
          "400":
            description: Invalid request body
    get:
        tags:
        - user
        summary: user favorite recipes
        description: get all recipes saved in user favorites.
        operationId: getFavorite, return all favorite recipes of user
        responses:
          "200":
            description: Recipes retrived succedsfully
            content:
            application/json:
              schema:
              type: object
              properties:
              - recipeid: 
                type: int
              - preview:
                $ref: '#/components/schemas/RecipeDetails'
          "400":
            description: Invalid request body
components:
  schemas:
    User:
      required:
      - username
      - firstname
      - lastname
      - country
      - password
      - email
      properties:
        username:
          maxLength: 8
          minLength: 3
          type: string
          description: contain 3-8 letters only (unique).
          example: harryPo
        firstName:
          type: string
          description: user first name
          example: Harry
        lastName:
          type: string
          description: user last name
          example: Potter
        country:
          type: string
          description: user country (from https://restcountries.com/v3.1/all)
          example: England
        password:
          maxLength: 10
          minLength: 5
          type: string
          description: "contain 5-10 charactes, at least one of them is a number and a special char."
          format: password
          example: herm1@ne
        email:
          type: string
          description: user email
          format: email
          example: hpotter@gmail.com
    RecipeDetails:
      required:
      - id
      - title
      - readyInMinutes
      - image
      - popularity
      - vegan
      - vegetarian
      - glutenFree
      type: object
      properties:
        id:
          type: integer
          example: 1
        image:
          type: string
          format: url
          example: "recipesImage\\{id=19}"
        title:
          type: string
          example: Chocolate Cake
        readyInMinutes:
          type: int
          format: duration
          example: 20
        popularity:
          type: integer
          example: 456
        vegan:
          type: boolean
          example: true
        vegetarian:
          type: boolean
          example: true
        glutenFree:
          type: boolean
          example: true
    Ingredient:
      type: object
      required:
      - name
      - quantity
      - unit
      properties:
        name:
          type: string
          example: sugar
        quantity:
          type: number
          example: 1.25
        unit:
          type: string
          example: spoons
    Recipe:
      required:
      - ingredients
      - instructions
      - servings
      - recipe
      type: object
      properties:
        recipe:
          $ref: '#/components/schemas/RecipeDetails'
        ingredients:
          type: array
          example:
          - name: sugar
            quantity: 1.25
            unit: spoons
          - name: flour
            quantity: 2
            unit: cups
          - name: chocolate chips
            quantity: 0.5
            unit: cups
          items:
            $ref: '#/components/schemas/Ingredient'
        instructions:
          type: array
          example: ["Preheat the oven to 210 C.", "Mix the flour, sugar, and salt in a large bowl."]
        servings:
          type: integer
          example: 12
    RecipeSearch:
      required:
      - recipeDetails
      - instructions
      type: object
      properties:
          recipeDetails:
            $ref: '#/components/schemas/RecipeDetails'
          instructions:
            type: array
            example: ["Preheat the oven to 210 C.", "Mix the flour, sugar, and salt in a large bowl."]
    login_body:
      required:
      - password
      - username
      type: object
      properties:
        username:
          type: string
          description: user's username
          example: harryPo
        password:
          type: string
          description: user's password
          example: herm1@ne
    MyRecipeDetails:
        required:
        - id
        - title
        - readyInMinutes
        - image
        - vegan
        - vegetarian
        - glutenFree
        type: object
        properties:
          id:
            type: integer
            example: 1
          image:
            type: string
            format: url
            example: "recipesImage\\{id=19}"
          title:
            type: string
            example: Chocolate Cake
          readyInMinutes:
            type: int
            format: duration
            example: 20
          vegan:
            type: boolean
            example: true
          vegetarian:
            type: boolean
            example: true
          glutenFree:
            type: boolean
            example: true
    MyRecipe:
      required:
      - ingredients
      - instructions
      - servings
      - recipe
      type: object
      properties:
        recipe:
          $ref: '#/components/schemas/MyRecipeDetails'
        ingredients:
          type: array
          example:
          - name: sugar
            quantity: 1.25
            unit: spoons
          - name: flour
            quantity: 2
            unit: cups
          - name: chocolate chips
            quantity: 0.5
            unit: cups
          items:
            $ref: '#/components/schemas/Ingredient'
        instructions:
          type: array
          example: ["Preheat the oven to 210 C.", "Mix the flour, sugar, and salt in a large bowl."]
        servings:
          type: integer
          example: 12
    NewRecipe:
      required:
      - recipe
      - type
      type: object
      properties:
        recipe:
          $ref: '#/components/schemas/Recipe'
        type:
          type: string
          example: Family\Private


